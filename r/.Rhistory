ls
ls()''
ls()
1+1
500*500
x = c(23,4,5)
x = x + 4
x
plot(x)
seq(from 1, length 1000, by = 5,5)
seq(from 1, length 1000, by = 5.5)
seq(from = 1, length = 1000, by = 5,5)
seq(from = 1, to = 10)
seq(from = 1, to = 10, by = 1,13)
seq(from = 1, to = 10, by = 1.13)
z = seq(from = 1, to = 10, by = 1.13)
z[1]
z[1]
z[2]
z[c(2,3)]
z[z>2]
z[z>3]
matrixA = matrix(data = c(1:10), ncol =2, nrow =5)
plot matrixA
plot(matrixA)
array(data = z, dim c(2,3,3))
array(data = z, dim c(2,3,3)) # Generate 3 x by
x = array(data = z, dim c(2,3,3)) # Generate 3 x by
x = array(data = z, dim=c(2,3,3)) # Generate 3 x by
x = [1,2,3,4,5]
x = c(1,2,3,4,5)
balle = x[1:5]/5
balle = x[1]
balle = x[2]
balle = x[1:5]
balle = x[c(1:5)]
balle = x[c(1,2,3,4,5)]
balle
sum(balle)/5
length(x)
sum(balle)/length(x)
sum(z)/length(z)
mean(balle)
oddNumber = seq(from = 1, to = 100, by = 2)
oddNumber
allNumber = seq(from = 1, to = 100)
allNumber
ls()
newOddNumber = allNumber[od]
newOddNumber = allNumber[oddNumber]
newOddNumber = oddNumber
z =newOddNumber = oddNumber
z=
0
z=
1
1
z =newOddNumber = oddNumber
z =newOddNumber == oddNumber
z
lst = list(name="Massimiliano", surname="Ruocco", age=95)
lst$name
lst$age
pirces = c(3,4,5,7)
sqm = c(80,120,110,90)
cities = c("Trondheim", "Trondheim", "Oslo", "Bergen")
data.frame(pirces, sqm, cities)
apmprices = data.frame(pirces, sqm, cities)
apmprices[1,2]
apmprices[1]
apmprices$pirces
apmprices$cities
apmprices$cities[1,]
apmprices$cities[1,]
apmprices[1,]
head(apmprices, n=2)
head(apmprices)
write.table(x = apmprices, file = "c:\temp\test.dat")
write.table(x = apmprices, file = "test.dat")
getwd()
setwd("c:\github\ma-120\r\")
setwd("c:\github\ma-120\r")
setwd("c:/github/ma-120/r")
write.table(x = apmprices, file = "test.dat")
load.table("ipcenter03.csv")
read.csv("ipcenter03.csv")
ipCenter04 = read.csv("ipcenter03.csv")
piccadilly = read.table("https://raw.githubusercontent.com/ruoccoma/RCourse/master/data/piccadilly.txt"")
1
0
)
)
>
1
q()
q()
(q)
'))))'
)
_22"""
piccadilly = read.table(url("https://raw.githubusercontent.com/ruoccoma/RCourse/master/data/piccadilly.txt"))
piccadilly = colnames("lat","lon","time")
colnames(piccadilly = "lat", "lon", "time")
colnames(piccadilly = c("lat", "lon", "time"))
example("colnames")
colnames(piccadilly <- c("lat", "lon", "time"))
colnames(piccadilly) <- c("lat", "lon", "time")
head(piccadilly)
piccadilly = read.table(url("https://raw.githubusercontent.com/ruoccoma/RCourse/master/data/piccadilly.txt"))
piccadilly = read.table(url("https://raw.githubusercontent.com/ruoccoma/RCourse/master/data/piccadilly.txt"), head=FALSE)
colnames(piccadilly)
colnames(piccadilly) <- c("lat","lon","time")
plot(piccadilly)
head(piccadilly)
write.table(piccadilly, file = "picc.txt")
source("fileLength.R")
fileLength("Test")
source("fileLength.R")
fileLength("picc.txt")
source("fileLength.R")
fileLength("picc.txt")
fileLength("picc.txt")
source("fileLength.R")
source("fileLength.R")
fileLength("picc.txt")
fileLength("./picc.txt")
source("fileLength.R")
fileLength("./picc.txt")
fileLength("picc.txt")
source("fileLength.R")
fileLength("picc.txt")
source("fileLength.R")
fileLength("picc.txt")
fileLength("https://raw.githubusercontent.com/ruoccoma/RCourse/master/data/piccadilly.txt")
source('C:/github/ma-120/r/fileLength.R')
source('C:/github/ma-120/r/fileLength.R')
fileLength("https://raw.githubusercontent.com/ruoccoma/RCourse/master/data/piccadilly.txt")
source('C:/github/ma-120/r/fileLength.R')
source('C:/github/ma-120/r/fileLength.R')
fileLength("https://raw.githubusercontent.com/ruoccoma/RCourse/master/data/piccadilly.txt")
source('C:/github/ma-120/r/fileLength.R')
source('C:/github/ma-120/r/fileLength.R')
install.packages("ggplot2")
library(ggplot2)
url_data = "https://github.com/ruoccoma/RCourse/blob/master/data/landdata-states.csv""
""
url_data = "https://github.com/ruoccoma/RCourse/blob/master/data/landdata-states.csv"
housing <- read.csv(url_data)
head housing
head(housing)
url_data = "https://raw.githubusercontent.com/ruoccoma/RCourse/master/data/landdata-states.csv"
housing <- read.csv(url_data)
head(housing)
ggplot(data=housing, aes(x = housing$Home.Value) + geom_histogram)
ggplot(data=housing, aes(x = housing$Home.Value)) + geom_histogram)
ggplot(data=housing, aes(x = housing$Home.Value)) + geom_histogram())
ggplot(data=housing, aes(x = housing$Home.Value)) + geom_histogram()
ggplot(data=housing, aes(x = housing$Home.Value)) + geom_histogram() + labs(x="Home Value")
first_layer <- ggplot(housing, aes(x=housing$Date, y = housing$Home.Value))''
first_layer <- ggplot(housing, aes(x=housing$Date, y = housing$Home.Value))
first_layer + geom_line(aes(color=housing$State))
first_layer + geom_line() + facet_wrap(~state)
first_layer + geom_line() + facet_wrap(~state,ncol = 10)
first_layer + geom_line() + facet_wrap(~State,ncol = 10)
first_layer + geom_line() + facet_wrap(~State,ncol = 10) + labs(title="House Pricing")
housing2 <- subset(housing, regexpr('20052',housing$Date)!=-1)
layer_gplot = ggplot(mapping = aes(x = housing2$Structure.Cost, y = housing$Land.Value), data  = housing2, size = 0.1)
layer_gplot + geom_point(aes(color =Home.Value + geom_smooth)
""
layer_gplot + geom_point(aes(color =Home.Value) + geom_smooth)
layer_gplot + geom_point(aes(color =Home.Value) + geom_smooth())
layer_gplot + geom_point(aes(color =Home.Value) + geom_smooth()
""
layer_gplot + geom_point(aes(color=Home.Value)) + geom_smooth()
layer_gplot = ggplot(mapping = aes(x = housing2$Structure.Cost, y = housing2$Land.Value), data  = housing2, size = 0.1)
layer_gplot + geom_point(aes(color=Home.Value)) + geom_smooth()
layer_gplot + geom_text(aes(label=housing2$State), size=3) + geom_smooth()
map(database="world", region=".")
library(maps)
install.packages("maps")
library(maps)
map("state", interior = FALSE)
map("world", region = "norway")
map("world", region = "nordics")
map("world", region = "scandinavia")
map("world", region = "EMEA")
map("world", region = "dubai"
)
map("world", region = "UAE")
map("state", region = "California")
map("state", region = "California", color="green")
map("world", interior = false)
map("world", interior = FALSE)
library("mapdata")
install.packages("mapdata")
library("mapdata")
help mapdata
help(mapdata)
map("state", interior = TRUE)
map("state", interior = FALSE)
map("state", interior = TRUE)
png("usa.png")
map("state", interior = TRUE)
dev.off()
install.package(ggmap)
install.package("ggmap")
install.package("ggmap")
install.packages("ggmap")
library(ggmap)
map <- get_map(location = "Trondheim", zoom = 16)
ggmap(map)
map <- get_map(location = "Oslo", zoom = 16)
ggmap(map)
png("Oslo.png")
ggmap(map)
dev.off()
map <- get_map(location = "Norway", zoom = 16)
png("Norway.png")
ggmap(map)
dev.off()
ggmap(map)
map <- get_map(location = "Norway", zoom = 1)
ggmap(map)
map <- get_map(location = "Norge", zoom = 1)
map <- get_map(location = "Norway", zoom = 1)
get_map(location="London", zoom = 14)
map = get_map(location="London", zoom = 14)
ggmap(map)
ggmap(map) + geom_point(aes(x= piccadilly$lon, y = piccadilly$lat))
ggmap(map) + geom_point(data = piccadilly, aes(x= piccadilly$lon, y = piccadilly$lat))
ggmap(map) + geom_point(data = piccadilly, aes(x= piccadilly$lon, y = piccadilly$lat, size = 0.1))
ggmap(map) + geom_point(data = piccadilly, aes(x= piccadilly$lon, y = piccadilly$lat, size = 0.001))
ggmap(map) + geom_point(data = piccadilly, aes(x= piccadilly$lon, y = piccadilly$lat, size = 0.8))
ggmap(map) + geom_point(data = piccadilly, aes(x= piccadilly$lon, y = piccadilly$lat), size = 0.1
""
ggmap(map) + geom_point(data = piccadilly, aes(x= piccadilly$lon, y = piccadilly$lat), size = 0.1)
ggmap(map) + geom_point(data = piccadilly, aes(x= piccadilly$lon, y = piccadilly$lat), size = 0.5)
exit
exit()
quit()
